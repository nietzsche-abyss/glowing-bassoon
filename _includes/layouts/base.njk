<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }} | Cutting-Edge Malware Research</title>
		<meta name="description" content="{{ description or metadata.description }}">
		<meta name="keywords" content="Nietzsche Virus Lab, malware research, macOS, linux, security research, red teaming">
		<meta name="robots" content="index, follow">
		<link rel="canonical" href="https://nietzsche.blog{{ page.url }}" />
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">
		{#- JSON-LD schema #}
	<script type="application/ld+json">
	{
		"@context": "https://schema.org",
		"@type": "Organization",
		"name": "Nietzsche Virus Lab",
		"url": "https://nietzsche.blog/",
		"description": "Nietzsche Virus Lab focuses on advanced malware research and knowledge sharing.",
		"sameAs": [
			"https://x.com/NietzscheLab"
		]
	}
	</script>

	{#- Inline styles from original #}
	<style>
		body {
			font-family: monospace;
			background: #f5f5f7;
			color: #1d1d1f;
			display: flex;
			flex-direction: column;
			align-items: center;
			padding: 20px;
			margin: 0;
		}

		header {
			width: 100%;
			max-width: 700px;
			margin-bottom: 0px;
		}

		.top-nav {
			display: flex;
			gap: 20px;
			border-bottom: 1px solid #ddd;
			padding-bottom: 8px;
			align-items: center;
			margin-top: 30px;
		}

		.top-nav a {
			text-decoration: none;
			color: #0071e3;
			font-size: 18px;
			cursor: pointer;
			transition: color 0.2s, font-size 0.2s;
		}

		.top-nav a:hover {
			text-decoration: underline;
		}

		/* Active nav styling: black color, slightly bigger font */
		.top-nav a.active {
			color: #000;
			font-size: 20px;
			text-decoration: none;
		}

		main {
			width: 100%;
			max-width: 700px;
		}

		h1 {
			font-size: clamp(32px, 8vw, 56px);
			font-weight: 600;
			letter-spacing: -0.02em;
			cursor: pointer;
			margin: 0;
			transition: none;
			margin-bottom: 0;
		}

		h1:hover, h1:active, h1:focus {
			transform: none;
			color: inherit;
		}

		#recent-posts-heading {
			margin-top: 35px;
			margin-bottom: 10px;
		}

		.blog-list {
			list-style: none;
			padding: 0;
			margin-top: 20px;
		}

		.blog-item {
			display: flex;
			justify-content: space-between;
			padding: 15px 0;
			border-bottom: 1px solid #ddd;
		}

		.blog-item a {
			font-size: 20px;
			text-decoration: none;
			color: #0071e3;
		}

		.date {
			display: flex;
			align-items: center;
			color: #999;
			font-size: 14px;
		}

		#blog-content {
			margin-top: 30px;
			line-height: 1.6;
		}

		#blog-content h1 {
			font-size: 36px;
		}
		/* Media query: smaller screens */
		@media (max-width: 767px) {
			#blog-content h1 {
				font-size: 2em;
			}
		}

		.back-link {
			font-size: 1.1em;
			cursor: pointer;
			color: #0071e3;
			margin-bottom: 15px;
		}

		.share-buttons {
			margin-top: 20px;
		}

		.share-buttons a {
			text-decoration: none;
			margin-right: 10px;
			color: #0071e3;
		}

		footer {
			margin-top: 40px;
			text-align: center;
			font-size: 14px;
			color: #888;
		}

		p {
			font-size: 1.1em;
		}
		
		.contact-list {
			list-style: none;
			padding: 0;
			margin: 10px 0;
		}

		.contact-list li {
			margin-bottom: 10px;
			font-size: 1.1em;
		}
		.contact-list a {
			color: #0071e3;
		}

		.x-contact {
			text-decoration: none;
			color: #0071e3;
			display: flex;
			align-items: center;
			gap: 8px; /* Space between icon and text */
		}

		.x-contact:hover {
			text-decoration: underline;
		}

		.x-icon {
			width: 20px; /* Matches SVG width */
			height: 20px; /* Matches SVG height */
			vertical-align: middle; /* Aligns icon with text */
		}
	</style>
</head>
<body>
	<header>
		<h1 id="title">{{ metadata.title }}</h1>
		<p id="title-p">{{ metadata.description }}</p>
		<nav class="top-nav" aria-label="Primary Navigation">
			{%- for entry in collections.all | eleventyNavigation %}
				<a href="{{ entry.url }}" id="nav-{{ entry.key | lower }}"{% if entry.url == page.url %} class="active"{% endif %}>{{ entry.title }}</a>
			{%- endfor %}
		</nav>
	</header>

	<main id="main">
		<div id="blog-content">
			{{ content | safe }}
		</div>
	</main>

	<footer>
		<p>&copy; 2025 Nietzsche Virus Lab</p>
	</footer>

	{#- Inline script adapted from original, without client-side fetching #}
	<script>
		// Decoding functions from original
		function decodeElement(el, finalText, speed) {
			const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*";
			let iterations = 0;
			const interval = setInterval(() => {
				el.textContent = finalText
					.split('')
					.map((char, idx) => (idx < iterations)
						? char
						: chars[Math.floor(Math.random() * chars.length)])
					.join('');
				iterations++;
				if (iterations > finalText.length) {
					clearInterval(interval);
				}
			}, speed);
		}

		function decodeBlogContent(container, speed) {
			const walker = document.createTreeWalker(container, NodeFilter.SHOW_TEXT);
			const textNodes = [];
			while (walker.nextNode()) {
				textNodes.push(walker.currentNode);
			}

			textNodes.forEach((node) => {
				const finalText = node.nodeValue;
				node.nodeValue = '';
				let iterations = 0;
				const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*";
				const interval = setInterval(() => {
					node.nodeValue = finalText
						.split('')
						.map((char, idx) => (idx < iterations)
							? char
							: chars[Math.floor(Math.random() * chars.length)])
						.join('');
					iterations++;
					if (iterations > finalText.length) {
						clearInterval(interval);
					}
				}, speed);
			});
		}

		// Decode on load
		window.onload = () => {
			const titleEl = document.getElementById('title');
			const titlepEl = document.getElementById('title-p');
			const navHome = document.getElementById('nav-home');
			const navAbout = document.getElementById('nav-about');
			const navContact = document.getElementById('nav-contact');
			const recentPostsHeading = document.getElementById('recent-posts-heading');

			decodeElement(titleEl, "{{ metadata.title }}", 50);
			decodeElement(titlepEl, "{{ metadata.description }}", 20);

			decodeElement(navHome, "Home", 70);
			decodeElement(navAbout, "About", 70);
			decodeElement(navContact, "Contact", 80);
			if (recentPostsHeading) {
				decodeElement(recentPostsHeading, "Recent Posts", 80);
			}

			// Decode main content
			decodeBlogContent(document.querySelector('main'), 10);

			// Title click to home
			titleEl.onclick = () => {
				window.location.href = '/';
			};
		};
	</script>
</body>
</html>
